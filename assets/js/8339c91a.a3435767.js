"use strict";(self.webpackChunknode_note=self.webpackChunknode_note||[]).push([[54],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return u}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||l;return a?t.createElement(h,o(o({ref:n},c),{},{components:a})):t.createElement(h,o({ref:n},c))}));function u(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4564:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var t=a(7462),r=a(3366),l=(a(7294),a(3905)),o=["components"],i={sidebar_position:3},s="lerna",p={unversionedId:"cli/lerna",id:"cli/lerna",title:"lerna",description:"\u539f\u751f\u811a\u624b\u67b6\u5f00\u53d1\u7684\u75db\u70b9",source:"@site/docs/cli/lerna.md",sourceDirName:"cli",slug:"/cli/lerna",permalink:"/node-note/docs/cli/lerna",editUrl:"https://github.com/shibin-cli/node-note/tree/master/packages/create-docusaurus/templates/shared/docs/cli/lerna.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\u81ea\u52a8\u5316\u6784\u5efa",permalink:"/node-note/docs/cli/grunt"},next:{title:"Webpack4",permalink:"/node-note/docs/cli/webpack4"}},c=[{value:"\u539f\u751f\u811a\u624b\u67b6\u5f00\u53d1\u7684\u75db\u70b9",id:"\u539f\u751f\u811a\u624b\u67b6\u5f00\u53d1\u7684\u75db\u70b9",children:[],level:2},{value:"lerna\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528",id:"lerna\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528",children:[],level:2},{value:"lerna\u6e90\u7801\u5206\u6790",id:"lerna\u6e90\u7801\u5206\u6790",children:[{value:"\u51c6\u5907",id:"\u51c6\u5907",children:[],level:3}],level:2},{value:"lerna\u521d\u59cb\u5316\u8fc7\u7a0b",id:"lerna\u521d\u59cb\u5316\u8fc7\u7a0b",children:[{value:"lerna\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898",id:"lerna\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898",children:[],level:3},{value:"yargs\u7684\u4f7f\u7528",id:"yargs\u7684\u4f7f\u7528",children:[],level:3}],level:2},{value:"import-local",id:"import-local",children:[{value:"pkg-dir",id:"pkg-dir",children:[],level:3},{value:"resolve-from",id:"resolve-from",children:[{value:"Module._nodeModulePaths",id:"module_nodemodulepaths",children:[],level:4},{value:"Module._resolveFilename",id:"module_resolvefilename",children:[],level:4}],level:3}],level:2}],d={toc:c};function m(e){var n=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"lerna"},"lerna"),(0,l.kt)("h2",{id:"\u539f\u751f\u811a\u624b\u67b6\u5f00\u53d1\u7684\u75db\u70b9"},"\u539f\u751f\u811a\u624b\u67b6\u5f00\u53d1\u7684\u75db\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u591apackage\uff0c\u91cd\u590d\u64cd\u4f5c",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f9d\u8d56\u5b89\u88c5"),(0,l.kt)("li",{parentName:"ul"},"\u5355\u5143\u6d4b\u8bd5"),(0,l.kt)("li",{parentName:"ul"},"\u672c\u5730link"),(0,l.kt)("li",{parentName:"ul"},"\u4ee3\u7801\u63d0\u4ea4"),(0,l.kt)("li",{parentName:"ul"},"\u4ee3\u7801\u53d1\u5e03"))),(0,l.kt)("li",{parentName:"ul"},"\u7248\u672c\u4e00\u81f4\u6027",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53d1\u5e03\u65f6\u4ee3\u7801\u4e00\u81f4\u6027"),(0,l.kt)("li",{parentName:"ul"},"\u53d1\u5e03\u540e\u76f8\u4e92\u7248\u672c\u4f9d\u8d56\u5347\u7ea7\npackage\u8d8a\u591a\uff0c\u7ba1\u7406\u590d\u6742\u5ea6\u8d8a\u9ad8")))),(0,l.kt)("h2",{id:"lerna\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528"},"lerna\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lerna/lerna"},"Lerna"),"\u662f\u4e00\u6b3e\u57fa\u4e8egit + npm \u7684\u591a package \u9879\u76ee\u7684\u7ba1\u7406\u5de5\u5177"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5927\u5e45\u5ea6\u51cf\u5c11\u91cd\u590d\u64cd\u4f5c"),(0,l.kt)("li",{parentName:"ul"},"\u63d0\u5347\u64cd\u4f5c\u7684\u6807\u51c6\u5316")),(0,l.kt)("p",null,"lerna\u7684\u5e38\u7528\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u521b\u5efapackage\nlerna create core\n# \u5b89\u88c5\u4f9d\u8d56\u5230\u6240\u6709package\nlerna add @dev-cli/utils\n# \u5220\u9664\u6240\u6709package\u4f9d\u8d56\nlerna clean\n# \u5b89\u88c5\u4f9d\u8d56\u5230\u6307\u5b9apackage\nlerna add @dev-cli/utils packages/core\n# \u91cd\u88c5\u6240\u6709\u4f9d\u8d56\nlerna bootstrap\n# \u94fe\u63a5\u4f9d\u8d56\nlerna link\n# \u6267\u884c\u6240\u6709package\u7684shell\u547d\u4ee4 \nlerna exec -- <command> [..args]\n# \u6267\u884c\u6240\u6709package\u7684\u547d\u4ee4\nlerna run <command>\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lerna/lerna"},"lerna"),"\u7684\u6587\u6863\u5730\u5740 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/lerna/lerna"},"https://github.com/lerna/lerna")),(0,l.kt)("h2",{id:"lerna\u6e90\u7801\u5206\u6790"},"lerna\u6e90\u7801\u5206\u6790"),(0,l.kt)("h3",{id:"\u51c6\u5907"},"\u51c6\u5907"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9996\u5148\u628a\u6e90\u7801\u4e0b\u8f7d\u5230\u672c\u5730"),(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5\u4f9d\u8d56\uff0c\u8fd9\u91cc\u4f7f\u7528 pnpm",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"lerna \u4f7f\u7528\u4e86workspace\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6e",(0,l.kt)("inlineCode",{parentName:"li"},"pnpm-workspace")),(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5\u4f9d\u8d56,\u6267\u884c ",(0,l.kt)("inlineCode",{parentName:"li"},"pnpm install")))),(0,l.kt)("li",{parentName:"ul"},"\u627e\u5230\u5165\u53e3\u6587\u4ef6\uff0clerna\u7684\u5165\u53e3\u6587\u4ef6\u5728",(0,l.kt)("inlineCode",{parentName:"li"},"core/lerna/cli.js"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pnpm-workspace.yml")," \u6587\u4ef6\u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},"packages:\n  - 'commands/*'\n  - 'core/*'\n  - 'utils/*'\n")),(0,l.kt)("h2",{id:"lerna\u521d\u59cb\u5316\u8fc7\u7a0b"},"lerna\u521d\u59cb\u5316\u8fc7\u7a0b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"core/lerna/cli.js"),"\u6587\u4ef6\u4e2d\u5f15\u5165\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"core/lerna/index.js")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'#!/usr/bin/env node\n\n"use strict";\n\n/* eslint-disable import/no-dynamic-require, global-require */\nconst importLocal = require("import-local");\n\nif (importLocal(__filename)) {\n  require("npmlog").info("cli", "using local version of lerna");\n} else {\n  require(".")(process.argv.slice(2));\n}\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"core/lerna/index.js")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'"use strict";\n\nconst cli = require("@lerna/cli");\n\nconst addCmd = require("@lerna/add/command");\nconst bootstrapCmd = require("@lerna/bootstrap/command");\nconst changedCmd = require("@lerna/changed/command");\nconst cleanCmd = require("@lerna/clean/command");\nconst createCmd = require("@lerna/create/command");\nconst diffCmd = require("@lerna/diff/command");\nconst execCmd = require("@lerna/exec/command");\nconst importCmd = require("@lerna/import/command");\nconst infoCmd = require("@lerna/info/command");\nconst initCmd = require("@lerna/init/command");\nconst linkCmd = require("@lerna/link/command");\nconst listCmd = require("@lerna/list/command");\nconst publishCmd = require("@lerna/publish/command");\nconst runCmd = require("@lerna/run/command");\nconst versionCmd = require("@lerna/version/command");\n\nconst pkg = require("./package.json");\n\nmodule.exports = main;\n\nfunction main(argv) {\n  const context = {\n    lernaVersion: pkg.version,\n  };\n\n  return cli()\n    .command(addCmd)\n    .command(bootstrapCmd)\n    .command(changedCmd)\n    .command(cleanCmd)\n    .command(createCmd)\n    .command(diffCmd)\n    .command(execCmd)\n    .command(importCmd)\n    .command(infoCmd)\n    .command(initCmd)\n    .command(linkCmd)\n    .command(listCmd)\n    .command(publishCmd)\n    .command(runCmd)\n    .command(versionCmd)\n    .parse(argv, context);\n}\n')),(0,l.kt)("p",null,"\u901a\u8fc7\u8c03\u8bd5\u6267\u884c\uff0c\u6700\u7ec8\u4f1a\u8fdb\u5165\u4e0a\u9762\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"main"),"\u51fd\u6570\u4e2d"),(0,l.kt)("p",null,"\u70b9\u51fbcli\u8df3\u8f6c\u5230'core/cli.js'\u6587\u4ef6\u4e2d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'function lernaCLI(argv, cwd) {\n  const cli = yargs(argv, cwd);\n\n  return globalOptions(cli)\n    .usage("Usage: $0 <command> [options]")\n    .demandCommand(1, "A command is required. Pass --help to see all available commands and options.")\n    .recommendCommands()\n    .strict()\n    .fail((msg, err) => {\n      // certain yargs validations throw strings :P\n      const actual = err || new Error(msg);\n\n      // ValidationErrors are already logged, as are package errors\n      if (actual.name !== "ValidationError" && !actual.pkg) {\n        // the recommendCommands() message is too terse\n        if (/Did you mean/.test(actual.message)) {\n          log.error("lerna", `Unknown command "${cli.parsed.argv._[0]}"`);\n        }\n\n        log.error("lerna", actual.message);\n      }\n\n      // exit non-zero so the CLI can be usefully chained\n      cli.exit(actual.exitCode > 0 ? actual.exitCode : 1, actual);\n    })\n    .alias("h", "help")\n    .alias("v", "version")\n    .wrap(cli.terminalWidth()).epilogue(dedent`\n      When a command fails, all logs are written to lerna-debug.log in the current working directory.\n\n      For more information, find our manual at https://github.com/lerna/lerna\n    `);\n}\n')),(0,l.kt)("p",null,"\u6211\u4eec\u770b\u5230\u4f7f\u7528\u4e86 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yargs/yargs"},"yargs")),(0,l.kt)("h3",{id:"lerna\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898"},"lerna\u89e3\u51b3\u4f9d\u8d56\u95ee\u9898"),(0,l.kt)("p",null,"\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"core/lerna/package.json"),"\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230lerna\u7684\u672c\u5730\u4f9d\u8d56\u662f\u8fd9\u6837\u5199\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n...\n  "dependencies": {\n    "@lerna/add": "file:../../commands/add",\n    "@lerna/bootstrap": "file:../../commands/bootstrap",\n    "@lerna/changed": "file:../../commands/changed",\n    "@lerna/clean": "file:../../commands/clean",\n    "@lerna/cli": "file:../cli",\n    "@lerna/create": "file:../../commands/create",\n    "@lerna/diff": "file:../../commands/diff",\n    "@lerna/exec": "file:../../commands/exec",\n    "@lerna/import": "file:../../commands/import",\n    "@lerna/info": "file:../../commands/info",\n    "@lerna/init": "file:../../commands/init",\n    "@lerna/link": "file:../../commands/link",\n    "@lerna/list": "file:../../commands/list",\n    "@lerna/publish": "file:../../commands/publish",\n    "@lerna/run": "file:../../commands/run",\n    "@lerna/version": "file:../../commands/version",\n    "import-local": "^3.0.2",\n    "npmlog": "^4.1.2"\n  }\n}\n')),(0,l.kt)("p",null,"\u8fd9\u6837\u5199\u7684\u597d\u5904\u662f\u4e0d\u7528\u5230\u5904\u6267\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"npm link")," \u4e86\uff0c\u4e5f\u8282\u7701\u4e86\u7a7a\u95f4"),(0,l.kt)("p",null,"\u5728\u53d1\u5e03\u65f6\uff0clerna\u5c31\u4f1a\u628a\u672c\u5730\u94fe\u63a5\u89e3\u6790\u6210\u7ebf\u4e0a\u7684\u94fe\u63a5\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u7ebf\u4e0a\u4f7f\u7528\u95ee\u9898"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'  resolveLocalDependencyLinks() {\n    // resolve relative file: links to their actual version range\n    const updatesWithLocalLinks = this.updates.filter((node) =>\n      Array.from(node.localDependencies.values()).some((resolved) => resolved.type === "directory")\n    );\n\n    return pMap(updatesWithLocalLinks, (node) => {\n      for (const [depName, resolved] of node.localDependencies) {\n        // regardless of where the version comes from, we can\'t publish "file:../sibling-pkg" specs\n        const depVersion = this.updatesVersions.get(depName) || this.packageGraph.get(depName).pkg.version;\n\n        // it no longer matters if we mutate the shared Package instance\n        node.pkg.updateLocalDependency(resolved, depVersion, this.savePrefix);\n      }\n\n      // writing changes to disk handled in serializeChanges()\n    });\n  }\n')),(0,l.kt)("h3",{id:"yargs\u7684\u4f7f\u7528"},"yargs\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"\u5728\u770blerna\u6e90\u7801\u65f6\uff0c\u6211\u4eec\u770b\u5230\u4f7f\u7528\u4e86yargs,\u6240\u4ee5\u9700\u8981\u5148\u4e86\u89e3\u4e0byargs\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"lerna\u4e2d\u4f7f\u7528\u4e86 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yargs/yargs"},"yargs")),(0,l.kt)("p",null,"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u811a\u624b\u67b6\u9879\u76ee\uff0c\u5728package\u6587\u4ef6\u4e2d\u914d\u7f6e\u811a\u624b\u67b6\u7684\u547d\u4ee4\u548c\u5165\u53e3\u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "bin": {\n    "dev": "index.js"\n  }\n}\n')),(0,l.kt)("p",null,"\u5728\u5165\u53e3\u6587\u4ef6\uff0c\u5148\u5199\u4e0b\u4e0b\u9762\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"#!/usr/bin/env node\n\nconst yargs = require('yargs/yargs')\nconst { hideBin } = require('yargs/helpers')\n\nconst argv = hideBin(process.argv)\n\nyargs(argv)\n.argv\n")),(0,l.kt)("p",null,"\u5728\u63a7\u5236\u53f0\u8f93\u5165"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dev --help\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\u9009\u9879\uff1a\n  --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                 [\u5e03\u5c14]\n  --version  \u663e\u793a\u7248\u672c\u53f7                                                   [\u5e03\u5c14]\n")),(0,l.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u8f93\u5165"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"dev --version \n")),(0,l.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u770b\u5230yargs\u4f1a\u5e2e\u6211\u4eec\u9ed8\u8ba4\u751f\u6210\u4e24\u4e2a\u547d\u4ee4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'yargs(argv)\n.usage("Usage: <command> [options]")\n.argv\n')),(0,l.kt)("p",null,"\u6267\u884c--help\u540e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"+Usage: <command> [options]\n\n\u9009\u9879\uff1a\n  --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                 [\u5e03\u5c14]\n  --version  \u663e\u793a\u7248\u672c\u53f7                                                   [\u5e03\u5c14]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'yargs.demandCommand(1, "A command is required. Pass --help to see all available commands and options.")\n')),(0,l.kt)("p",null,"\u8f93\u5165dev\uff0c\u63a7\u5236\u53f0\u5c31\u4f1a\u8f93\u51fa\u4e0b\u9762\u5185\u5bb9\u3002\u5f53\u6211\u4eec\u8f93\u5165\u6ca1\u6709\u6ce8\u518c\u7684\u547d\u4ee4\u65f6\u5c31\u4f1a\u6709\u4e0b\u9762\u63d0\u793a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Usage: <command> [options]\n\n\u9009\u9879\uff1a\n  --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                 [\u5e03\u5c14]\n  --version  \u663e\u793a\u7248\u672c\u53f7                                                   [\u5e03\u5c14]\n\nA command is required. Pass --help to see all available commands and options.\n")),(0,l.kt)("p",null,"alias\u7528\u6765\u8bbe\u7f6e\u522b\u540d\uff0c\u4f8b\u5982\u53ef\u4ee5\u5c06",(0,l.kt)("inlineCode",{parentName:"p"},"dev -v"),",\u5c31\u76f8\u5f53\u4e8e\u8f93\u5165\u4e86'dev --version'"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs\n.alias('h', 'help')\n.alias('v', 'version')\n")),(0,l.kt)("p",null,"wrap\u53ef\u4ee5\u8bbe\u7f6e\u63a7\u5236\u53f0\u7684\u5feb\u8bfb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const cli = yargs(argv)\n\n//wrap\u8bbe\u7f6e\u4e3a cli.terminalWidth()\uff0c\u53ef\u4ee5\u4f7f\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u4fe1\u606f\u5145\u6ee1\u63a7\u5236\u53f0\ncli\n.usage(\"Usage: <command> [options]\")\n.demandCommand(1, \"A command is required. Pass --help to see all available commands and options.\")\n.alias('h', 'help')\n.alias('v', 'version')\n.wrap(cli.terminalWidth())\n.argv\n")),(0,l.kt)("p",null,"epilogue\u7528\u6765\u5728\u63a7\u5236\u53f0\u672b\u5c3e\u8f93\u51fa\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const dedent = require('dedent')\n\ncli\n.usage(\"Usage: <command> [options]\")\n.demandCommand(1, \"A command is required. Pass --help to see all available commands and options.\")\n.alias('h', 'help')\n.alias('v', 'version')\n.wrap(cli.terminalWidth())\n.epilogue(dedent`aaa\n  aaa\n`)\n.argv\n// \u4e0d\u4f7f\u7528dedent\u8f93\u51fa\n// aaa\n//   aaa\n// \u4f7f\u7528dedent\u8f93\u51fa\n// aaa\n// aaa\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u4f7f\u7528dedent\u662f\u4e3a\u4e86\u53bb\u9664\u6362\u884c\u524d\u7684\u63a7\u5236"),(0,l.kt)("p",null,"options\u7528\u6765\u5b9a\u4e49\u9009\u9879"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs.options({\n    debug:{\n        type: 'boolean',\n        describe: 'Boostrap debug mode',\n        alias: 'd'\n    }\n})\n")),(0,l.kt)("p",null,"\u6267\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"dev -h")," \u63a7\u5236\u53f0\u4f1a\u8f93\u51fa"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\u9009\u9879\uff1a\n  -d, --debug    Boostrap debug mode                                                                                                     [\u5e03\u5c14]\n  -h, --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                                                                            [\u5e03\u5c14]\n  -v, --version  \u663e\u793a\u7248\u672c\u53f7                                                                                                              [\u5e03\u5c14]\n\n")),(0,l.kt)("p",null,"\u4e5f\u53ef\u4ee5\u4f7f\u7528option\u6765\u66ff\u4ee3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs\n.option('debug', {\n    type: 'boolean',\n    describe: 'Boostrap debug mode',\n    alias: 'd'\n})\n")),(0,l.kt)("p",null,"group\u7528\u6765\u628aoption\u8fdb\u884c\u5206\u7ec4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs\n.group(['d'], 'dev')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"dev\n  -d, --debug  Boostrap debug mode                                                                                                       [\u5e03\u5c14]\n\n\u9009\u9879\uff1a\n  -h, --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                                                                            [\u5e03\u5c14]\n  -v, --version  \u663e\u793a\u7248\u672c\u53f7   \n")),(0,l.kt)("p",null,"command\u7528\u6765\u6ce8\u518c\u547d\u4ee4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs\n  .command('init [name]', 'Do init a project', yargs => {\n    // init\u547d\u4ee4\u7684\u9009\u9879 builder\n        yargs.option('name', {\n            type: 'string',\n            describe: 'Name of project',\n            alias: 'n'\n        })\n    }, argv => {\n      // \u7528\u6765\u5904\u7406\u8be5\u547d\u4ee4\u7684\u64cd\u4f5c handler\n        console.log(argv)\n    })\n")),(0,l.kt)("p",null,"command\u7684\u7b2c\u4e8c\u79cd\u5199\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"  .command({\n        command: 'list',\n        aliases: ['ls', 'la', 'll'],\n        describe: 'List local package',\n        builder: yargs => {\n\n        },\n        handler: argv => {\n            console.log(argv)\n        }\n    })\n")),(0,l.kt)("p",null,"recommendCommands\uff0c\u5f53\u6211\u4eec\u8f93\u9519\u547d\u4ee4\u65f6\uff0c\u6dfb\u52a0recommendCommands\u5c31\u4f1a\u5e2e\u6211\u4eec\u67e5\u627e\u6700\u63a5\u8fd1\u8f93\u5165\u547d\u4ee4\u7684\u547d\u4ee4\u63d0\u793a\u7ed9\u6211\u4eec"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"yargs.recommendCommands()\n")),(0,l.kt)("p",null,"\u4f8b\u5982\u5f53\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u547d\u4ee4dev ini "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"   \nUsage: <command> [options]\n\n\u547d\u4ee4\uff1a\n  index.js init [name]  Do init a project\n  index.js list         List local package                                                                                [aliases: ls, la, ll]\n\ndev\n  -d, --debug  Boostrap debug mode                                                                                                       [\u5e03\u5c14]\n\n\u9009\u9879\uff1a\n  -h, --help     \u663e\u793a\u5e2e\u52a9\u4fe1\u606f                                                                                                            [\u5e03\u5c14]\n  -v, --version  \u663e\u793a\u7248\u672c\u53f7                                                                                                              [\u5e03\u5c14]\n\naaa\naaa\n\n\u662f\u6307 init?\n")),(0,l.kt)("p",null,"fail\u7528\u6765\u5904\u7406\u5931\u8d25\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"    yargs.fail(err => {\n        console.log(err)\n    })\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u8f93\u5165\n dev ini\n#  \u8f93\u51fa\n\u662f\u6307 init?\n")),(0,l.kt)("p",null,"parse\u7528\u6765\u628a\u53c2\u6570\u8fdb\u884c\u89e3\u6790\u5408\u5e76,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const context = {\n    devVersion: '1.0.0'\n}\nyargs\n// \u4f1a\u628aprocess.argv\u548ccontext\u8fdb\u884c\u5408\u5e76\n  .parse(process.argv.slice(2), context)\n")),(0,l.kt)("p",null,"\u4f8b\u5982\u5f53\u6211\u4eec\u8f93\u5165",(0,l.kt)("inlineCode",{parentName:"p"},"dev ls"),"\uff0c\u89e3\u6790\u540e\u7684argv"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"{\n  _: [ 'ls' ],\n  devVersion: '1.0.0',\n  '$0': 'D:\\\\tools\\\\nodejs\\\\node_modules\\\\@dev-cli\\\\core\\\\lib\\\\index.js'\n}\n")),(0,l.kt)("h2",{id:"import-local"},"import-local"),(0,l.kt)("p",null,"\u5728lerna\u7684\u5165\u53e3\u6587\u4ef6\u5f15\u5165\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"import-local"),"\u8fd9\u4e2a\u5e93"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const importLocal = require("import-local");\n\nif (importLocal(__filename)) {\n  require("npmlog").info("cli", "using local version of lerna");\n} else {\n  require(".")(process.argv.slice(2));\n}\n')),(0,l.kt)("p",null,"\u9996\u5148\u4f7f\u7528\u4e86 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/pkg-dir"},"pkg-dir")," \u8fd9\u4e2a\u5e93\uff0c\u627e\u5230\u5f53\u524d\u5305\u7684\u6839\u76ee\u5f55"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const path = require('path');\nconst {fileURLToPath} = require('url');\nconst resolveCwd = require('resolve-cwd');\nconst pkgDir = require('pkg-dir');\n\n// filename \u5c31\u662f\u5f53\u524d\u6587\u4ef6\u7684\u8def\u5f84\nmodule.exports = filename => {\n    const normalizedFilename = filename.startsWith('file://') ? fileURLToPath(filename) : filename;\n  // \u627e\u5230\u5305\u542bpackage.json\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u9879\u76ee\u7684\u6839\u76ee\u5f55\n    const globalDir = pkgDir.sync(path.dirname(normalizedFilename));\n    const relativePath = path.relative(globalDir, normalizedFilename);\n    const pkg = require(path.join(globalDir, 'package.json'));\n    const localFile = resolveCwd.silent(path.join(pkg.name, relativePath));\n    const localNodeModules = path.join(process.cwd(), 'node_modules');\n\n    const filenameInLocalNodeModules = !path.relative(localNodeModules, normalizedFilename).startsWith('..') &&\n        // On Windows, if `localNodeModules` and    `normalizedFilename` are on different partitions, `path.relative()` returns the value of `normalizedFilename`, resulting in `filenameInLocalNodeModules` incorrectly becoming `true`.\n        path.parse(localNodeModules).root === path.parse(normalizedFilename).root;\n\n    // Use `path.relative()` to detect local package installation,\n    // because __filename's case is   on Windows\n    // Can use `===` when targeting Node.js 8\n    // See https://github.com/nodejs/node/issues/6624\n    return !filenameInLocalNodeModules && localFile && path.relative(localFile, normalizedFilename) !== '' && require(localFile);\n};\n")),(0,l.kt)("h3",{id:"pkg-dir"},"pkg-dir"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/pkg-dir"},"pkg-dir")," \u8fd9\u4e2a\u5e93\u7684\u6e90\u7801\u5f88\u7b80\u5355\uff0c\u5c31\u4e0b\u9762\u51e0\u884c\u4ee3\u7801\u3002"),(0,l.kt)("p",null,"\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u627e\u5230\u5f53\u524d\u6587\u4ef6\u5305\u542b ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," \u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u9879\u76ee\u7684\u6839\u76ee\u5f55, \u4ed6\u76f4\u63a5\u8c03\u7528\u4e86",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/find-up"},"find-up")," ",(0,l.kt)("inlineCode",{parentName:"p"},"findUp.sync")," \u65b9\u6cd5\uff0cfindup\u7684\u4f5c\u7528\u5c31\u662f\u904d\u5386\u7236\u76ee\u5f55\u53bb\u67e5\u627e\u5bf9\u7528\u6587\u4ef6\u7684\u8def\u5f84"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\nconst path = require('path');\nconst findUp = require('find-up');\n\nconst pkgDir = async cwd => {\n    const filePath = await findUp('package.json', {cwd});\n    return filePath && path.dirname(filePath);\n};\n\nmodule.exports = pkgDir;\n// TODO: Remove this for the next major release\nmodule.exports.default = pkgDir;\n\nmodule.exports.sync = cwd => {\n\n    const filePath = findUp.sync('package.json', {cwd});\n    return filePath && path.dirname(filePath);\n};\n\n")),(0,l.kt)("p",null,"find-up\u7684\u4f7f\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const path = require('path');\nconst findUp = require('find-up');\n// \u4f1a\u4ece\u5f53\u524d\u7236\u7ea7\u76ee\u5f55\u5f00\u59cb\u4e00\u7ea7\u4e00\u7ea7\u5f80\u4e0a\u67e5\u627epackage.json\u6587\u4ef6\uff0c\u77e5\u9053\u627e\u5230\u4e3a\u6b62\nconst filePath = findUp.sync('package.json', {\n    cwd: process.cwd()\n});\n    // return filePath && path.dirname(filePath);\nconsole.log(filePath)\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"module.exports.sync = (name, options = {}) => {\n    let directory = path.resolve(options.cwd || '');\n    const {root} = path.parse(directory);\n    const paths = [].concat(name);\n\n    const runMatcher = locateOptions => {\n        if (typeof name !== 'function') {\n            return locatePath.sync(paths, locateOptions);\n        }\n\n        const foundPath = name(locateOptions.cwd);\n        if (typeof foundPath === 'string') {\n            return locatePath.sync([foundPath], locateOptions);\n        }\n\n        return foundPath;\n    };\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const foundPath = runMatcher({...options, cwd: directory});\n\n        if (foundPath === stop) {\n            return;\n        }\n    // \u627e\u5230\u5c31\u8fd4\u56de\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\n        if (foundPath) {\n            return path.resolve(directory, foundPath);\n        }\n\n        if (directory === root) {\n            return;\n        }\n    // \u5f80\u7236\u7ea7\u67e5\u627e\n        directory = path.dirname(directory);\n    }\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\nconst path = require('path');\nconst fs = require('fs');\nconst {promisify} = require('util');\nconst pLocate = require('p-locate');\n\nconst fsStat = promisify(fs.stat);\nconst fsLStat = promisify(fs.lstat);\n\nconst typeMappings = {\n    directory: 'isDirectory',\n    file: 'isFile'\n};\n\nfunction checkType({type}) {\n    if (type in typeMappings) {\n        return;\n    }\n\n    throw new Error(`Invalid type specified: ${type}`);\n}\n// \u8fd9\u91cctypeMappings[type]\u5c31\u662fisFile\uff0c\u8c03\u7528isFile\u65b9\u6cd5\u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6\nconst matchType = (type, stat) => type === undefined || stat[typeMappings[type]]();\n\nmodule.exports.sync = (paths, options) => {\n    options = {\n        cwd: process.cwd(),\n        allowSymlinks: true,\n        type: 'file',\n        ...options\n    };\n    checkType(options);\n    const statFn = options.allowSymlinks ? fs.statSync : fs.lstatSync;\n\n    for (const path_ of paths) {\n        try {\n            const stat = statFn(path.resolve(options.cwd, path_));\n            // \u8c03\u7528isFile\u662f\u5426\u662f\u6587\u4ef6 \uff0c\u662f\u5426\u5efa\u5c31\u53d1\u90a3\u4f1apath_\n            if (matchType(options.type, stat)) {\n                return path_;\n            }\n        } catch (_) {\n        }\n    }\n};\n\n")),(0,l.kt)("h3",{id:"resolve-from"},"resolve-from"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const resolveCwd = require('resolve-cwd');\n...\nconst localFile = resolveCwd.silent(path.join(pkg.name, relativePath));\n")),(0,l.kt)("p",null,"resolve-cwd \u7684\u6e90\u7801\u5f88\u7b80\u5355\uff0c\u5c31\u8c03\u7528\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"resolve-from")," \u7684\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"\nconst resolveFrom = require('resolve-from');\n\nmodule.exports = moduleId => resolveFrom(process.cwd(), moduleId);\nmodule.exports.silent = moduleId => resolveFrom.silent(process.cwd(), moduleId);\n\n")),(0,l.kt)("p",null,"\u4e0b\u9762\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"resolve-from "),"\u7684\u6e90\u7801\u4e2d\uff0c\u8c03\u7528\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._nodeModulePaths")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._resolveFilename")," \u3002\u9700\u8981\u5148\u641e\u61c2 ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._nodeModulePaths")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._resolveFilename")," \u7684\u7528\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\nconst path = require('path');\nconst Module = require('module');\nconst fs = require('fs');\n\nconst resolveFrom = (fromDirectory, moduleId, silent) => {\n    try {\n        fromDirectory = fs.realpathSync(fromDirectory);\n    } catch (error) {\n        if (error.code === 'ENOENT') {\n            fromDirectory = path.resolve(fromDirectory);\n        } else if (silent) {\n            return;\n        } else {\n            throw error;\n        }\n    }\n\n    const fromFile = path.join(fromDirectory, 'noop.js');\n\n    const resolveFileName = () => Module._resolveFilename(moduleId, {\n        id: fromFile,\n        filename: fromFile,\n        paths: Module._nodeModulePaths(fromDirectory)\n    });\n\n    if (silent) {\n        try {\n            return resolveFileName();\n        } catch (error) {\n            return;\n        }\n    }\n\n    return resolveFileName();\n};\n\n")),(0,l.kt)("h4",{id:"module_nodemodulepaths"},"Module._nodeModulePaths"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Module._resolveFilename")," \u65b9\u6cd5\u662f\u4e3a\u4e86\u89e3\u6790\u6587\u4ef6\u7684\u771f\u5b9e\u8def\u5f84"),(0,l.kt)("p",null,"\u8fd9\u91cc\u53c2\u7167\u962e\u4e00\u5cf0\u7684 ",(0,l.kt)("a",{parentName:"p",href:"http://www.ruanyifeng.com/blog/2015/05/require.html"},"require() \u6e90\u7801\u89e3\u8bfb")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Module._nodeModulePaths")," \u65b9\u6cd5\u7684\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"Module._nodeModulePaths = function(from) {\n  // \u751f\u6210\u7edd\u5bf9\u8def\u5f84\n    from = path.resolve(from)\n    var splitRe = process.platform === 'win32' ? /[\\/\\\\]/ : /\\//;\n    var paths = [];\n    var parts = from.split(splitRe);\n    for (var tip = parts.length - 1; tip >= 0; tip--) {\n      //\u5982\u679c\u6587\u4ef6\u540d\u4e3a node_modules \uff0c \u5c31\u8df3\u8fc7\n      if (parts[tip] === 'node_modules') continue;\n      var dir = parts.slice(0, tip + 1).concat('node_modules').join(path.sep);\n      paths.push(dir);\n    }\n    return paths;\n  };\n")),(0,l.kt)("p",null,"\u5728 win \u4e0b\u8f93\u5165'a/b/c/d',\u5c31\u4f1a\u8f93\u51fa"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"[\n  '\u78c1\u76d8\u540d\u79f0:\\\\a\\\\b\\\\c\\\\node_modules',\n  '\u78c1\u76d8\u540d\u79f0:\\\\a\\\\b\\\\node_modules',\n  '\u78c1\u76d8\u540d\u79f0:\\\\a\\\\node_modules',\n  '\u78c1\u76d8\u540d\u79f0:\\\\node_modules'\n]\n")),(0,l.kt)("h4",{id:"module_resolvefilename"},"Module._resolveFilename"),(0,l.kt)("p",null,"\u4e0b\u9762\u962e\u4e00\u5cf0\u7684 ",(0,l.kt)("a",{parentName:"p",href:"http://www.ruanyifeng.com/blog/2015/05/require.html"},"require() \u6e90\u7801\u89e3\u8bfb")," \u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"Module.resolveFilename")," \u7684\u89e3\u6790"),(0,l.kt)("p",null,"\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"Module.resolveFilename")," \u65b9\u6cd5\u5185\u90e8\uff0c\u53c8\u8c03\u7528\u4e86\u4e24\u4e2a\u65b9\u6cd5 ",(0,l.kt)("inlineCode",{parentName:"p"},"Module.resolveLookupPaths()")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._findPath()")," \uff0c\u524d\u8005\u7528\u6765\u5217\u51fa\u53ef\u80fd\u7684\u8def\u5f84\uff0c\u540e\u8005\u7528\u6765\u786e\u8ba4\u54ea\u4e00\u4e2a\u8def\u5f84\u4e3a\u771f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"Module._resolveFilename = function(request, parent) {\n\n  // \u7b2c\u4e00\u6b65\uff1a\u5982\u679c\u662f\u5185\u7f6e\u6a21\u5757\uff0c\u4e0d\u542b\u8def\u5f84\u8fd4\u56de\n  if (NativeModule.exists(request)) {\n    return request;\n  }\n\n  // \u7b2c\u4e8c\u6b65\uff1a\u786e\u5b9a\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84\n  var resolvedModule = Module._resolveLookupPaths(request, parent);\n  var id = resolvedModule[0];\n  var paths = resolvedModule[1];\n\n  // \u7b2c\u4e09\u6b65\uff1a\u786e\u5b9a\u54ea\u4e00\u4e2a\u8def\u5f84\u4e3a\u771f\n  var filename = Module._findPath(request, paths);\n  if (!filename) {\n    var err = new Error(\"Cannot find module '\" + request + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  }\n  return filename;\n};\n")),(0,l.kt)("p",null,"\u4e0b\u9762\u622a\u53d6\u4e86\u90e8\u5206 ",(0,l.kt)("inlineCode",{parentName:"p"},"Module._resolveLookupPaths")," \u6e90\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"Module._resolveLookupPaths = function(request, parent) {\n  // \u662f\u5426\u662f\u539f\u751f\u6a21\u5757\n  if (NativeModule.exists(request)) {\n    return [request, []];\n  }\n\n  var start = request.substring(0, 2);\n  // \u76f8\u5bf9\u8def\u5f84\n  if (start !== './' && start !== '..') {\n    // modulePaths \u5c31\u662f\u73af\u5883\u53d8\u91cf\u4e2d\u7684 node_modules\n    var paths = modulePaths;\n    // \u8fd9\u91cc\u7684 parent.paths \u6307\u5b9a\u5c31\u662f\u6240\u6709\u53ef\u80fdnode_modules\u7684\u76ee\u5f55\n    if (parent) {\n      if (!parent.paths) parent.paths = [];\n      // \u8ddf\u73af\u5883\u53d8\u91cf\u4e2d\u7684node_modules\u7684\u76ee\u5f55\u5408\u5e76\u540e\u8fd4\u56de\n      paths = parent.paths.concat(paths);\n    }\n    return [request, paths];\n  }\n  ...\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"odule._findPath = function(request, paths) {\n\n  // \u5217\u51fa\u6240\u6709\u53ef\u80fd\u7684\u540e\u7f00\u540d\uff1a.js\uff0c.json, .node\n  var exts = Object.keys(Module._extensions);\n\n  // \u5982\u679c\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5c31\u4e0d\u518d\u641c\u7d22\n  if (request.charAt(0) === '/') {\n    paths = [''];\n  }\n\n  // \u662f\u5426\u6709\u540e\u7f00\u7684\u76ee\u5f55\u659c\u6760\n  var trailingSlash = (request.slice(-1) === '/');\n\n  // \u7b2c\u4e00\u6b65\uff1a\u5982\u679c\u5f53\u524d\u8def\u5f84\u5df2\u5728\u7f13\u5b58\u4e2d\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\n  var cacheKey = JSON.stringify({request: request, paths: paths});\n  if (Module._pathCache[cacheKey]) {\n    return Module._pathCache[cacheKey];\n  }\n\n  // \u7b2c\u4e8c\u6b65\uff1a\u4f9d\u6b21\u904d\u5386\u6240\u6709\u8def\u5f84\n  for (var i = 0, PL = paths.length; i < PL; i++) {\n    var basePath = path.resolve(paths[i], request);\n    var filename;\n\n    if (!trailingSlash) {\n      // \u7b2c\u4e09\u6b65\uff1a\u662f\u5426\u5b58\u5728\u8be5\u6a21\u5757\u6587\u4ef6\n      filename = tryFile(basePath);\n\n      if (!filename && !trailingSlash) {\n        // \u7b2c\u56db\u6b65\uff1a\u8be5\u6a21\u5757\u6587\u4ef6\u52a0\u4e0a\u540e\u7f00\u540d\uff0c\u662f\u5426\u5b58\u5728\n        filename = tryExtensions(basePath, exts);\n      }\n    }\n\n    // \u7b2c\u4e94\u6b65\uff1a\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728 package.json \n    if (!filename) {\n      filename = tryPackage(basePath, exts);\n    }\n\n    if (!filename) {\n      // \u7b2c\u516d\u6b65\uff1a\u662f\u5426\u5b58\u5728\u76ee\u5f55\u540d + index + \u540e\u7f00\u540d \n      filename = tryExtensions(path.resolve(basePath, 'index'), exts);\n    }\n\n    // \u7b2c\u4e03\u6b65\uff1a\u5c06\u627e\u5230\u7684\u6587\u4ef6\u8def\u5f84\u5b58\u5165\u8fd4\u56de\u7f13\u5b58\uff0c\u7136\u540e\u8fd4\u56de\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n  }\n\n  // \u7b2c\u516b\u6b65\uff1a\u6ca1\u6709\u627e\u5230\u6587\u4ef6\uff0c\u8fd4\u56defalse \n  return false;\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function tryFile(requestPath, isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath, {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path, check if the file exists with any of the set extensions\nfunction tryExtensions(p, exts, isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i], isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n")))}m.isMDXComponent=!0}}]);